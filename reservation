from datetime import date, timedelta
import customer_related_functions
import mysql.connector

def ADD():
    '''To make a new reservation'''
    mycon = mysql.connector.connect(host='localhost', database= 'ride_bookings')
    mycursor = mycon.cursor(buffered=True)

    while True:
        ask_exisitng = input('Do you have an account with us? [y/n]: ').upper()
        if ask_exisitng in ('Y', 'N'):
            break
        else:
            print('Response entered is invalid. Please try again.')

    if ask_exisitng == 'N':
        c_id = customer_related_functions.ADD()
    else:
        sql = 'SELECT c_id, status from customer'
        mycursor.execute(sql)
        data = mycursor.fetchall()
        data1 = []
        data2 = []

        for i, j in data:
            if j == 'I':
                data1.append(i)
            else:
                data2.append(i)

        while True:
            c_id = input('Please enter your customer ID: ').upper()
            if c_id in data2:
                print('You currently have another open ride, please wait for that ride to be completed before scheduling a new one.')
                return
            elif c_id not in data1:
                print("I'm sorry but Customer ID '%s' does not exist." % c_id)
                continue
            break

        sql = 'Please select the pick up location, destination and car size from rides where status = "a" '
        mycursor.execute(sql)
        data = mycursor.fetchall()

        if mycursor.rowcount == 0:
            print('Sorry, there are no rides available at this time.')
            return

        main_dict = {}

        for i, j, k, l in data:
            if i in main_dict:
                if j in main_dict[i]:
                    if k in main_dict[i][j]:
                        main_dict[i][j][k].append(l)
                    else:
                        main_dict[i][j][k] = []
                        main_dict[i][j][k].append(l)
                else:
                    main_dict[i][j] = {}
                    main_dict[i][j][k] = []
                    main_dict[i][j][k].append(l)
            else:
                main_dict[i] = {}
                main_dict[i][j] = {}
                main_dict[i][j][k] = []
                main_dict[i][j][k].append(l)

        while True:
            while True:
                pick_up_location = input('Please enter you current location: %s ' % list(main_dict.keys())).upper()
                if pick_up_location not in main_dict:
                    print('Sorry, your location is outside of our service zone.')
                else:
                    break

            while True:
                destination_location = input('Please enter your destination location: %s ' % list(main_dict.keys())).upper()
                if destination_location not in main_dict:
                    print('Sorry, your destination location is outside of our service zone.')
                else:
                    break

            while True:
                car_size = input('Please select the car size you would like [s/m/l]. Small cars seat 1, medium seat 4, and large seat up to 6: %s' % list(main_dict.keys())).upper()
                if car_size not in main_dict:
                    print('Sorry, the size car you selected is not available. Please select another option.')
                else:
                    break

            print("\nThese are the selections you have made for your current ride reservation:\n")

            sql = "select * from rides where pick up location = '%s' and destination location = '%s' and car size = '%s' and status = 'a' order by rand()" % (pick_up_location, destination_location, car_size)
            mycursor.execute(sql)
            ride = mycursor.fetchall()[0]

            header = ['DRIVER_ID', 'PICKUP LOCATION', 'DESTINATION LOCATION', ' NUMBER OF SEATS']
            status = {'A': 'Available', 'NA': 'Not Available'}
            
            while True:
                R = input('Do you wish to continue with this ride booking? [y/n]').upper()
                if R not in ['Y', 'N']:
                    print('Response entered is invalid. Please try again.')
                else:
                    break
                if R == 'Y':
                    break
            
            sql = "update driver set status = 'NA' where driver_id = '%s'" % driver[0]
            mycursor.execute(sql)

            sql = "select * from ride bookings"
            mycursor.execute(sql)
            mycursor.fetchall()
            R_id = mycursor.rowcount
            R_id = 'R' + str(R_id +1)

            print('Your ride has successfully been booked. Your ride reservation ID is ', R_id)

def UPDATE():
    '''To update ride details'''
    mycon = mysql.connector.connect(host='localhost', database= 'ride_bookings')
    mycursor = mycon.cursor(buffered=True)

    R_id = input('Please enter your ride ID: ')

    sql = "select pick_up_location, destination_location, car_size from reservation where R_id = '%s'" % R_id

    mycursor.execute(sql)

    data = mycursor.fetchall()

    s = mycursor.rowcount

    if s == 0:
        print('Sorry, ride does not exist.')
    else:
        data = data[0]
        pick_up_location, destination_location, car_size = data

        while True:
            print()
            print('What ride information do you wish to change?')
            print('1. Pickup location')
            print('2. Destination location')
            print('3. Car size')
            print('4. Save Changes')

            while True:
                choice = input('Please select menu option: ')
                if len(choice) !=1 or not choice.isdigit() or choice not in "1234":
                    print('The option you have selected is not valid. Please try again.')
                else:
                    break

                if choice == "1":
                    while True:
                            pick_up_location = input('Please enter your new pickup location: %s ' % list(main_dict.keys())).upper()
                            if pick_up_location not in main_dict:
                                print('Sorry, your location is outside of our service zone.')
                            else:
                                break
                elif choice == "2":
                    while True:
                            destination_location = input('Please enter your new destination location: %s ' % list(main_dict.keys())).upper()
                            if destination_location not in main_dict:
                                print('Sorry, your destination location is outside of our service zone.')
                            else:
                                break

                elif choice == '3':
                    while True:
                            car_size = input('Please enter your new car size [s/m/l]: %s ' % list(main_dict.keys())).upper()
                            if car_size not in main_dict:
                                print('Sorry, the size car you selected is not available. Please select another option.')
                            else:
                                break

                database = (pick_up_location, destination_location, car_size, R_id)
                sql = "UPDATE ride SET pick_up_location = %s, destination_location = '%s', car_size = '%s', WHERE r_id = '%s'" % database
                mycursor.execute(sql)
                mycon.commit()

                print('Your ride has been updated.')

                mycon.close()
        
    def DELETE():
        '''To delete ride reservations'''
    mycon = mysql.connector.connect(host='localhost', database= 'ride_bookings')
    mycursor = mycon.cursor(buffered=True)

    while True:
        R_id = input('Please enter your ride ID: ').upper()

        sql = "select * from customer where r_id = '%s' " % R_id

        mycursor.execute(sql)

        data = mycursor.fetchall()

        t = mycursor.rowcount

        if t == 0:
            print('Sorry, ride does not exist.')
        else:
            while True:
                a = input("Do you want to remove '%s' from system?: [Y/N] " %data[0][1]).upper()
                if a not in ('Y', 'N'):
                    mycon.commit()
                    print('The ride has successfully been deleted from the system.')

                    while True:
                        choice = input('Do you want to delete another ride? [Y/N]').upper()
                        if choice not in ('Y', 'N'):
                            print('Choice entered was invalid. Please try again.')
                            continue
                        break

                    if choice == 'N':
                        break

                    mycon.close()